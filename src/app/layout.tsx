import Provider from "@/components/provider/Provider";
import { TITLE } from "@/constant/app.constant";
import { ColorSchemeScript, mantineHtmlProps } from "@mantine/core";
import type { Metadata } from "next";
import { NextIntlClientProvider } from "next-intl";
import { getLocale, getMessages } from "next-intl/server";
import { Geist, Geist_Mono } from "next/font/google";

const geistSans = Geist({
   variable: "--font-geist-sans",
   subsets: ["latin"],
});

const geistMono = Geist_Mono({
   variable: "--font-geist-mono",
   subsets: ["latin"],
});

export const metadata: Metadata = {
   title: TITLE,
   description: "Generated by create next app",
};

type TProps = {
   children: React.ReactNode;
};

export default async function RootLayout({ children }: TProps) {
   const locale = await getLocale();
   const messages = await getMessages();

   return (
      <html lang={locale} {...mantineHtmlProps} suppressHydrationWarning>
         <head>
            <ColorSchemeScript />
         </head>
         <body className={`${geistSans.variable} ${geistMono.variable} antialiased`}>
            <NextIntlClientProvider messages={messages}>
               <Provider>{children}</Provider>
            </NextIntlClientProvider>
         </body>
      </html>
   );
}
